--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -14,6 +_,7 @@
 import com.mojang.serialization.Lifecycle;
 import io.papermc.paper.configuration.PaperServerConfiguration;
 import io.papermc.paper.configuration.ServerConfiguration;
+import de.erethon.spellbook.api.SpellbookAPI;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayOutputStream;
@@ -399,6 +_,10 @@
     }
     // Paper end - Folia reagion threading API
 
+    // Papyrus start
+    private final SpellbookAPI spellbookAPI;
+    // Papyrus end
+
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -497,6 +_,12 @@
         this.potionBrewer = new io.papermc.paper.potion.PaperPotionBrewer(console); // Paper - custom potion mixes
         datapackManager = new io.papermc.paper.datapack.PaperDatapackManager(console.getPackRepository()); // Paper
         this.spark = new io.papermc.paper.SparksFly(this); // Paper - spark
+        spellbookAPI = new SpellbookAPI(this); // Papyrus - Spellbook API
+    }
+
+    @Override
+    public SpellbookAPI getSpellbookAPI() {
+        return spellbookAPI;
     }
 
     public boolean getCommandBlockOverride(String command) {
